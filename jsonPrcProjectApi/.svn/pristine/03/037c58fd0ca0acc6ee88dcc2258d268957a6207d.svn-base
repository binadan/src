package com.action;

import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Map;
import java.util.Timer;
import java.util.TimerTask;

import javax.servlet.http.HttpServletRequest;

import org.apache.http.client.methods.HttpGet;
import org.apache.struts2.ServletActionContext;

import com.zx.tianjing.dao.LarumInfoDao;
import com.zx.tianjing.dao.util.JxSqlServer2008DbConnection;

public class LarumAction {
	//连接数据库
	private JxSqlServer2008DbConnection db_back=new JxSqlServer2008DbConnection();
	
	//<src=主机ID,alarmtype =type>
	private int src;
	private String alarmtype;
	private String res;
	private String state;
	
	public int getSrc() {
		return src;
	}
	public void setSrc(int src) {
		this.src = src;
	}
	public String getAlarmtype() {
		return alarmtype;
	}
	public void setAlarmtype(String alarmtype) {
		this.alarmtype = alarmtype;
	}
	public String getRes() {
		return res;
	}
	public void setRes(String res) {
		this.res = res;
	}
	
	
	public String getState() {
		return state;
	}
	public void setState(String state) {
		this.state = state;
	}
	HttpGet httpgets = null;
	static Map<String, String> map = new HashMap<String, String>();
	public String LarumInfoState(){
		Timer timer = new Timer();
		
		LarumInfoDao dao = new LarumInfoDao();

		//URL url = null;
		//String result = "Error command!";
		
		TimerTask task = new TimerTask() {
			@Override
			public void run() {
				map = new HashMap<String, String>();
			}
		};
		timer = new Timer();
		timer.schedule(task, 1000 * 60 * 7);
		try {
			if(map.get(String.valueOf(src))==null){
			System.out.println(map.get(String.valueOf(src)));
			String sql = "select b.H_NO,b.H_NAME,b.H_TEL,a.L_MID from laruminfo a,household b where a.L_HID = b.H_NO and L_MID = "+src;
			ResultSet rs = db_back.executeQuery(sql);
			//List<String> list = new ArrayList<String>();
			String h_no = "";
			String h_name = "";
			String h_tel = "";
			String l_mid = "";
			while (rs.next()) {
				h_no = rs.getString(1);
				h_name = rs.getString(2);
				h_tel = rs.getString(3);
				l_mid = rs.getString(4);
			}
			HttpServletRequest request = ServletActionContext.getRequest();
			request.getSession().setAttribute("h_name", h_name);
			
			dao.LarumInfoState(src, alarmtype);
			if(alarmtype != null){
				Process pro = Runtime.getRuntime().
						exec("rundll32 url.dll,FileProtocolHandler " +
								"http://localhost:8080/jsonPrcProjectApi/view.jsp?action=start&h_no="
								+h_no+"&h_name="+ java.net.URLEncoder.encode(h_name,"utf-8") +""+"&h_tel="+h_tel+"&l_mid="+l_mid);
				map.put(String.valueOf(src),String.valueOf(src));
				res = "ok";
				state = "正在录制监控视频请稍后...";
			}
			
			//Thread.sleep(1000*60*2);
			//pro.destroy();
			
/*			ScriptEngineManager mgr = new ScriptEngineManager();
			ScriptEngine engine = mgr.getEngineByName("JavaScript");
			Date date = new Date();
			SimpleDateFormat s = new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss");
			try {
				engine.eval("function starts(){ "
			+" var path = 'E:\\\\"+s.format(date)+".avi'; "
			+" var sta = 'remote.StartRec(path)';"
			+" return path; "
						+"}");     
			} catch (ScriptException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}     
			Invocable inv = (Invocable) engine;
			String starts = "";
			try {
				starts = String.valueOf(inv.invokeFunction("starts"));
			} catch (ScriptException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}  
			System.out.println("正在报警..."+starts);
			
			try {
				Thread.sleep(1000*60*2);
			} catch (InterruptedException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
			try {
				engine.eval("function end(){ "
						+"var sto = 'remote.StopRec()';"
						+"}");     
			} catch (ScriptException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}     
			inv = (Invocable) engine;
			String end = "";
			try {
				end = String.valueOf(inv.invokeFunction("end"));
			} catch (ScriptException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (NoSuchMethodException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 
			System.out.println("报警成功...报警信息的路径为："+end);*/
		
/*			try {
				url = new URL("http://192.168.1.108:8080/jsonPrcProjectApi/view.jsp?action=start");
				HttpURLConnection connection = (HttpURLConnection) url.openConnection();
				connection.connect();
			} catch (MalformedURLException e1) {
				e1.printStackTrace();
			}
			try {
	            Thread.sleep(1000*60*2);
	        } catch (InterruptedException e) {
	            e.printStackTrace(); 
	        }*/
			/*
			httpgets = new HttpGet(url.toString());
			System.out.println("路径：" + url.toString());
			@SuppressWarnings("deprecation")
			HttpClient httpclient = new DefaultHttpClient();
			HttpResponse response = null;
			try {
				response = httpclient.execute(httpgets);
			} catch (ClientProtocolException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
		  try {
	            Thread.sleep(1000*60*2);
	        } catch (InterruptedException e) {
	            e.printStackTrace(); 
	        }
			HttpEntity entity = response.getEntity();
			InputStream instreams = null;
			try {
				instreams = entity.getContent();
			} catch (UnsupportedOperationException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}
			//result = convertStreamToString(instreams);
			if (entity != null) {
				//System.out.println(result);
				httpgets.abort();
			}*/
/*			HttpServletResponse response =ServletActionContext.getResponse();
			PrintWriter out= response.getWriter();
			out.print("<script type='text/javascript'>");
			out.println("window.location.href='view.jsp?action=start';");
			out.print("</script>");*/
			
			}else{
				state = "该房屋正在报警中...";
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			res = "error";
			e.printStackTrace();
		}
		
		return "success";
	}
	
	
}
